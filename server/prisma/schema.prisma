generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  id    String  @id @default(cuid())
  email   String @unique
  avatar    String?
  username    String?
  createdAt   DateTime @default(now())
  access_token String?
  ig_id   Int?
  plan    String?
  purchaseAt DateTime @default(now())
  expireAt    DateTime?

  automations       Automation[]
}

model Otp {
  id         String   @id @default(cuid())
  email      String   @db.VarChar(255)
  otp    String
  expiresAt  DateTime
  attempts   Int      @default(0)
  createdAt  DateTime @default(now())

  @@index([email])
}

model subscription {
  id    String @id 
  plan    String
  purchaseAt    DateTime  @default(now())
  expireAt    DateTime
  amount    Int
  paymentMode   String
  transactionId     String
  createdAt   DateTime @default(now())

}

enum AutomationStatus {
  DRAFT
  LIVE
  PAUSED
  ARCHIVED
}

model Automation {
  id             String   @id @default(cuid())
  userId         String
  user           users  @relation(fields: [userId], references: [id], onDelete: Cascade)
  name           String
  description    String?
  status         AutomationStatus  @default(DRAFT)
  publishedAt    DateTime?
  postMediaId    String           
  postThumbnail  String? 
  anyKeyword     Boolean           @default(false) 
  keywords       String[]          @default([])  
  msgTitle       String?
  dmText         String          
  dmImageUrl     String?          
  dmLinks        Json?   
  createdAt      DateTime          @default(now())
  updatedAt      DateTime          @updatedAt


  @@index([userId, status])
  @@index([status, publishedAt])
  @@index([postMediaId])
}
