generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  id    String  @id @default(cuid())
  email   String @unique
  avatar    String?
  username    String?
  createdAt   DateTime @default(now())
  access_token String?
  ig_id   Int?
  plan    String? 
  purchaseAt DateTime @default(now())
  expireAt    DateTime?
  automations       Automation[]
  subscriptioin     Subscription[]
}

model Otp {
  id         String   @id @default(cuid())
  email      String   @db.VarChar(255)
  otp    String
  expiresAt  DateTime
  attempts   Int      @default(0)
  createdAt  DateTime @default(now())

  @@index([email])
}

enum AutomationStatus {
  DRAFT
  LIVE
  PAUSED
  ARCHIVED
}

model Automation {
  id             String   @id @default(cuid())
  userId         String
  user           users  @relation(fields: [userId], references: [id], onDelete: Cascade)
  name           String
  description    String?
  status         AutomationStatus  @default(DRAFT)
  publishedAt    DateTime?
  postMediaId    String           
  postThumbnail  String? 
  anyKeyword     Boolean           @default(false) 
  keywords       String[]          @default([])  
  msgTitle       String?
  dmText         String          
  dmImageUrl     String?          
  dmLinks        Json?   

  clickCount  Int?      @default(0)
  createdAt      DateTime          @default(now())
  updatedAt      DateTime          @updatedAt
  openingMsg     Boolean @default(false)
  openingMsgData    Json?
  commentReply    Boolean @default(false)
  commentReplyData    Json?
  followForDM     Boolean @default(false)
  followForDMData   Json?


  @@index([userId, status])
  @@index([status, publishedAt])
  @@index([postMediaId])
}


enum PlanInterval {
  MONTHLY
  YEARLY
}

enum SubscriptionStatus {
  ACTIVE
  INACTIVE
  CANCELED
  EXPIRED
}


enum PaymentMethod {
  UPI
  CARD
  UNKNOWN
}

model Subscription {
  id                   String              @id @default(cuid())
  userId               String
  user                 users               @relation(fields: [userId], references: [id], onDelete: Cascade)

  planKey              String
  planTitle            String              
  interval             PlanInterval    @default(MONTHLY)

  currentPeriodStart   DateTime
  currentPeriodEnd     DateTime
  cancelAtPeriodEnd    Boolean             @default(false)

  amountSubtotal       Int             
  discountAmount       Int                 @default(0)
  taxAmount            Int                 @default(0)
  amountTotal          Int                
          
  paymentId    String
  status               SubscriptionStatus  @default(ACTIVE)

  // paymentMethod        PaymentMethod       @default(UNKNOWN)
  // upiVpa               String?             
  // cardLast4            String?             
  // cardNetwork          String?  

  promotionCode        String?
  billingName          String?
  billingPhone         String?
  billingCountry       String?
  billingCity          String?

  createdAt            DateTime            @default(now())
  updatedAt            DateTime            @updatedAt

  @@index([userId, status])
  @@index([currentPeriodEnd])
}
